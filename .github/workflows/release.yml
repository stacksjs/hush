name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build and Release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Use cached node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            node-modules-

      - name: Install Dependencies
        run: bun install

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Set up Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: 6.1

      - name: Install dependencies
        run: brew install create-dmg

      # - name: Set up keychain for code signing
      #   uses: mskelton/macos-certs@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   env:
      #     CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
      #     CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}

      - name: Run tests
        run: swift test

      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Run SwiftLint
        run: swiftlint lint --reporter github-actions-logging Hush.app

      - name: Build app
        run: bun run build

      - name: Package DMG
        id: create_dmg
        run: bun run package

      # - name: Notarize DMG
      #   if: startsWith(github.ref, 'refs/tags/')
      #   env:
      #     APPLE_ID: ${{ secrets.APPLE_ID }}
      #     APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      #     TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      #   run: |
      #     echo "Submitting app for notarization"
      #     xcrun notarytool submit \
      #       ${{ steps.create_dmg.outputs.dmg_path }} \
      #       --apple-id "$APPLE_ID" \
      #       --password "$APPLE_ID_PASSWORD" \
      #       --team-id "$TEAM_ID" \
      #       --wait

      #     echo "Stapling notarization ticket to DMG"
      #     xcrun stapler staple ${{ steps.create_dmg.outputs.dmg_path }}

      - name: Publish to npm
        run: bun publish --access public
        env:
          BUN_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Create GitHub release
        run: bunx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Create GitHub Release
        uses: stacksjs/action-releaser@v1.1.0
        with:
          files: |
            dist/Hush.dmg
          # homebrewFormula: "homebrew-formula.rb.template"
          # homebrewRepo: "stacksjs/homebrew-tap"
          # homebrewPath: "Formula"
